// Breakpoints for each query
$smartphone: 480px;
$tabletPortrait: 767px;
$tabletLandscape: 1024px;
$desktop: 1174px;
$largeScreen: 1400px;
@mixin respondTo($media) {
	@if $media == smartphone {
		@media (max-width: $smartphone) { @content; }
	}
	@else if $media == tablet {
		@media (min-width: $tabletPortrait) and (max-width: $tabletLandscape) { @content; }
	}
	@else if $media == smallScreen {
		@media (max-width: $desktop) { @content; }
	}
	@else if $media == desktop {
		@media (min-width: $desktop) { @content; }
	}
}

// div {
//     // regular styles here
//     @include respondTo(desktop) {
//         &:hover { background: blue; } // only add the hover effect on desktop browsers
//     }
// }

@mixin makeGrid($layout-width: 960, $grid-columns: 12, $grid-class: 'grid_', $prefix-class: 'prefix_', $suffix-class: 'suffix_', $gutter: 10){
	$column-width : $layout-width / $grid-columns;
	$gutter-width : ($gutter / $layout-width * 100);

	@for $i from 1 through $grid-columns {
		
		$grid-width : (($column-width * $i) / $layout-width) * 100;

		.#{$grid-class}#{$i} {
			float: left;
			margin-left: #{$gutter-width}%;
			margin-right: #{$gutter-width}%;
			vertical-align: top;
			display: inline-block;
		}

		/* `Grid >> 12 Columns
		----------------------------------------------------------------------------------------------------*/

		.#{$grid-class}#{$i} {
			width: #{$grid-width}%;
		}

		/* `Prefix Extra Space >> 12 Columns
		----------------------------------------------------------------------------------------------------*/
		
		.#{$prefix-class}#{$i} {
			padding-left:  #{$grid-width}%;
		}

		/* `Suffix Extra Space >> 12 Columns
		----------------------------------------------------------------------------------------------------*/

		.#{$suffix-class}#{$i} {
			padding-right:  #{$grid-width}%;
		}
	}
}

@mixin ghostVerticalAlign(){
	&:before {
		content: '';
		display: inline-block;
		vertical-align: middle;
		height: 100%; width: .1px;
	}
}

@mixin truncate($overflow: ellipsis){
	overflow: hidden;
	white-space: nowrap;
	text-overflow: $overflow; // values are: clip, ellipsis, or a string
}

%currency {
	position: relative;
	&:before {
		content: '$';
		position: relative;
		left: 0;
	}
}
.USD %currency:before { content: '$'; }
.EUR %currency:before { content: '\20AC'; } // must escape the html entities for each currency symbol
.ILS %currency:before { content: '\20AA'; }
.GBP %currency:before { content: '\00A3'; }

// <body class="USD">    
//     <span class="price">45</span>
// </body>

// .price {
//     @extend %currency;
// }

//@include opacity(0.8);
@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}

//@include font-face('Gotham Pro', '../fonts/Gotham-webfont', 400, italic);
@mixin font-face($family, $path, $weight, $style) {
	@font-face {
		font-family: $family;
		font-weight: $weight;
		font-style: $style;
		font-display: swap;
		src: url('#{$path}.eot');
		src: local('#{$family}'),
			 url('#{$path}.eot?#iefix') format('embedded-opentype'),
			 url('#{$path}.woff2') format('woff2'),
			 url('#{$path}.woff') format('woff'),
			 url('#{$path}.ttf') format('truetype'),
			 url('#{$path}.svg##{$family}') format('svg');
	}

	@media screen and (-webkit-min-device-pixel-ratio: 0) {
		@font-face {
			font-family: $family;
			src: url('#{$path}.svg##{$family}') format('svg');
		}
	}
}


//@include aspect-ratio(4, 3, 'img');
@mixin aspect-ratio($width, $height, $tag) {
	position: relative;

	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}

	#{$tag} {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}

/// Помощник для сброса внутреннего обтекания
/// @author Николас Галлагер
/// @link http://nicolasgallagher.com/micro-clearfix-hack/ Micro Clearfix
@mixin clearfix {
	&::after {
		content: '';
		display: table;
		clear: both;
	}
}

/// Помощник для определения размера
/// @author Hugo Giraudel
/// @param {Length} $width
/// @param {Length} $height
@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}

@mixin word-wrap() {
	-ms-word-break: break-all;
	word-break: break-all;
	word-break: break-word;
	-webkit-hyphens: auto;
	-moz-hyphens: auto;
	hyphens: auto;
}

// @include triangle within a pseudo element and add positioning properties (ie. top, left)
@mixin triangle($direction, $size: 6px, $color: #222){
	content: '';
	display: block;
	position: absolute;
	height: 0; width: 0;
	@if ($direction == 'up'){
		border-bottom: $size solid $color;
		border-left: 1/2*$size solid transparent;
		border-right: 1/2*$size solid transparent;
	}
	@else if ($direction == 'down'){
		border-top: $size solid $color;
		border-left: 1/2*$size solid transparent;
		border-right: 1/2*$size solid transparent;
	}
	@else if ($direction == 'left'){
		border-top: 1/2*$size solid transparent;
		border-bottom: 1/2*$size solid transparent;
		border-right: $size solid $color;
	}
	@else if ($direction == 'right'){
		border-top: 1/2*$size solid transparent;
		border-bottom: 1/2*$size solid transparent;
		border-left: $size solid $color;
	}
}

@mixin alerted() {
	&:before {
		content: '';
		position: absolute;
		top: 6px; right: 6px;
		height: 8px; width: 8px;
		@include border-radius(10px);
		background-color: gold;
	}
	&:after {
		content: '';
		position: absolute;
		top: 0; right: 0;
		height: 20px; width: 20px;
		@include border-radius(20px);
		background-color: transparent;
		border: solid gold;
		border-width: 2px; // animates
		@include box-sizing(border-box);
		@include animation($name: alertMe);
	}
}

// @keyframes alertMe {
//   // -vendor prefixes omitted for brevity, but should be used in production
//   from {
//     border-width: 3px;
//     border-color: gold;
//   }
//   to {
//     border-width: 0;
//     border-color: rgba(gold, .1);
//   }
// }


@mixin hui_tooltip($content: attr(data-tooltip), $direction: top) {
  position: relative;
  &:before, &:after {
	display: none;
	z-index: 98;
  }
  &:hover {
	&:after { // for text bubble
	  content: $content;
	  display: block;
	  position: absolute;
	  height: 12px; // (makes total height including padding 22px)
	  padding: 6px;
	  font-size: 12px;
	  white-space: nowrap;
	  color: #fff;
	  @include text-shadow(1px 1px #000);
	  background-color: #222;
	}
	@if ($direction == 'top'){
	  &:before {
		@include triangle(down, 6px, #222);
		top: -6px; margin-top: 0;
		left: 47%;
	  }
	  &:after {
		top: -28px;
		left: 47%; margin-left: -20px;
	  }
	}
	@else if ($direction == 'bottom'){
	  &:before {
		@include triangle(up, 6px, #222);
		top: auto; margin-top: 0;
		bottom: -6px;
		left: 47%;
	  }
	  &:after {
		bottom: -28px;
		left: 47%; margin-left: -20px;
	  }
	}
  }
}